# Global values
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Application configuration
app:
  name: plant-analytics-platform
  version: "1.0.0"
  environment: development

# Image configuration
image:
  registry: docker.io
  pullPolicy: IfNotPresent
  tag: "latest"

# Service configurations
services:
  # Frontend Service
  frontend:
    enabled: true
    replicaCount: 1
    image:
      repository: plant-analytics-platform-frontend
      tag: "latest"
    service:
      type: ClusterIP
      port: 4000
      targetPort: 4000
    ingress:
      enabled: true
      className: ""
      annotations: {}
      hosts:
        - host: plant-analytics.local
          paths:
            - path: /
              pathType: Prefix
      tls: []
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi

  # API Gateway Service
  apiGateway:
    enabled: true
    replicaCount: 2
    image:
      repository: plant-analytics-platform-api-gateway
      tag: "latest"
    service:
      type: ClusterIP
      port: 8000
      targetPort: 8000
    env:
      NODE_ENV: development
      AUTH_SERVICE_URL: http://auth-service:5000
      BACKEND_URL: http://backend-api:3000
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

  # Auth Service
  authService:
    enabled: true
    replicaCount: 2
    image:
      repository: plant-analytics-platform-auth-service
      tag: "latest"
    service:
      type: ClusterIP
      port: 5000
      targetPort: 5000
    env:
      NODE_ENV: development
      JWT_SECRET: change-me-in-production
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi

  # Backend API Service
  backendApi:
    enabled: true
    replicaCount: 2
    image:
      repository: plant-analytics-platform-backend-api
      tag: "latest"
    service:
      type: ClusterIP
      port: 3000
      targetPort: 3000
    env:
      NODE_ENV: development
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

  # Airflow Webserver
  airflowWebserver:
    enabled: true
    replicaCount: 1
    image:
      repository: docker-airflow-webserver
      tag: "latest"
    service:
      type: ClusterIP
      port: 8080
      targetPort: 8080
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi

  # Airflow Scheduler
  airflowScheduler:
    enabled: true
    replicaCount: 1
    image:
      repository: docker-airflow-scheduler
      tag: "latest"
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi

# External dependencies configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: plantpassword123
    username: plantuser
    password: plantpassword123
    database: plant_analytics
  primary:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: ""
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: ""
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi

rabbitmq:
  enabled: true
  auth:
    username: admin
    password: password123
  persistence:
    enabled: true
    size: 8Gi
    storageClass: ""
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

minio:
  enabled: true
  auth:
    rootUser: egriduser
    rootPassword: egridpass123
  persistence:
    enabled: true
    size: 20Gi
    storageClass: ""
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Monitoring
prometheus:
  enabled: true
  service:
    type: ClusterIP
    port: 9090
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Security
podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

# Storage
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi

# Node selection
nodeSelector: {}
tolerations: []
affinity: {}