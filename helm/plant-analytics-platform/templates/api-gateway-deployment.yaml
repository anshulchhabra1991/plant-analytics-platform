{{- if .Values.services.apiGateway.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "plant-analytics-platform.api-gateway.fullname" . }}
  labels:
    {{- include "plant-analytics-platform.labels" . | nindent 4 }}
    app.kubernetes.io/component: api-gateway
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.services.apiGateway.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "plant-analytics-platform.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api-gateway
  template:
    metadata:
      labels:
        {{- include "plant-analytics-platform.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api-gateway
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-api-gateway
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.services.apiGateway.image.repository }}:{{ .Values.services.apiGateway.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.services.apiGateway.service.targetPort }}
              protocol: TCP
          env:
            - name: NODE_ENV
              value: {{ .Values.services.apiGateway.env.NODE_ENV | quote }}
            - name: AUTH_SERVICE_URL
              value: "http://{{ include "plant-analytics-platform.auth-service.fullname" . }}:{{ .Values.services.authService.service.port }}"
            - name: BACKEND_URL
              value: "http://{{ include "plant-analytics-platform.backend-api.fullname" . }}:{{ .Values.services.backendApi.service.port }}"
            - name: RATE_LIMIT_WINDOW_MS
              value: "300000"
            - name: RATE_LIMIT_MAX_REQUESTS
              value: "1000"
            - name: CORS_ORIGIN
              value: "*"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.services.apiGateway.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}